% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nom.R
\name{nom}
\alias{nom}
\title{Draw a nomogram}
\usage{
nom(
  data,
  points.label = "Points",
  total.points.label = "Total points",
  funlabel = "Risk",
  maxscale = 100,
  xfrac = 0.35,
  font.size = 12,
  fun.at = NULL,
  labels = NULL,
  show.points = FALSE,
  show.model = FALSE,
  show.explain = TRUE,
  ...
)
}
\arguments{
\item{data}{a data frame}

\item{points.label}{a character string giving the axis label for the points scale.}

\item{total.points.label}{a character string giving the axis label for the total points scale.}

\item{funlabel}{label for fun axis.}

\item{maxscale}{default maximum point score is 100.}

\item{xfrac}{fraction of horizontal plot to set aside for axis titles.}

\item{font.size}{font size.}

\item{fun.at}{function values to label on axis.}

\item{labels}{a list, labels for variables.}

\item{show.points}{show points, default FALSE..}

\item{show.model}{show model, default FALSE.}

\item{show.explain}{explain the figure, default TRUE.}

\item{...}{settings of variables to use in constructing axes.}
}
\description{
The nomogram can be interpreted as follows: (1) for each  variable,
draw a straight line up to the points axis to determine the points for that
variable, (2) repeat this process for each variable, (3) add the points for
all variables and locate the sum on the total points axis, and (4) draw a
straight line from total points down to risk.
}
\details{
Set labels use \link{label_variable} and \link{label_category} function.
}
\examples{
# View data
head(HCC)

# Randomly divide the data into training set and verification set
index <- sample(1:nrow(HCC), 12000)
train <- HCC[index, ]
test  <- HCC[-index, ]

# Develop a prediction model task.
# The prediction outcome is status,
# and the prediction variables are AJCC_T, AJCC_M, and AJCC_N.
tk1 <- nmtask(train.data = train,
              test.data  = test,
              outcome    = "status",
              predictors = c("AJCC_T", "AJCC_M", "AJCC_N"))
# View task
tk1

# Draw a nomogram
nom(tk1)

# Show points
nom(tk1, show.points = TRUE)

# Set function values to label on axis
nom(tk1,
    fun.at = c(0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95))
}
