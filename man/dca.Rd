% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dca.R
\name{dca}
\alias{dca}
\alias{dca.data.frame}
\alias{dca.nmtask}
\alias{dca.glm}
\title{Draw decision curves}
\usage{
dca(
  data,
  outcome = NULL,
  predictors = NULL,
  newdata = NULL,
  B = 10,
  thresholds = seq(0, 1, by = 0.01),
  linesize = 0.5,
  linecolor = NULL,
  linelabel = NULL,
  xlab = NULL,
  ylab = NULL,
  ...
)

\method{dca}{data.frame}(
  data,
  outcome = NULL,
  predictors = NULL,
  newdata = NULL,
  B = 10,
  thresholds = seq(0, 1, by = 0.01),
  linesize = 0.5,
  linecolor = NULL,
  linelabel = NULL,
  xlab = NULL,
  ylab = NULL,
  ...
)

\method{dca}{nmtask}(
  data,
  outcome = NULL,
  predictors = NULL,
  newdata = NULL,
  B = 10,
  thresholds = seq(0, 1, by = 0.01),
  linesize = 0.5,
  linecolor = NULL,
  linelabel = NULL,
  xlab = NULL,
  ylab = NULL,
  ...
)

\method{dca}{glm}(
  data,
  outcome = NULL,
  predictors = NULL,
  newdata = NULL,
  B = 10,
  thresholds = seq(0, 1, by = 0.01),
  linesize = 0.5,
  linecolor = NULL,
  linelabel = NULL,
  xlab = NULL,
  ylab = NULL,
  ...
)
}
\arguments{
\item{data}{data}

\item{outcome}{predict outcome.}

\item{predictors}{predictors.}

\item{newdata}{new data for verification.}

\item{B}{Number of bootstrap replicates to use to calculate confidence intervals (default 1000).}

\item{thresholds}{thresholds.}

\item{linesize}{line size, default 0.25.}

\item{linecolor}{line color, the length must be 3.}

\item{linelabel}{line label,the length must be 3.}

\item{xlab}{label for X axis.}

\item{ylab}{label for Y axis.}

\item{...}{further arguments.}
}
\description{
Draw decision curves
}
\examples{
head(aps)

# Basic usage
dca(aps,
    outcome = "elope",
    predictors = c("age", "gender", "place3", "neuro"))

# From a nmtask
tk <- nmtask(train.data = aps,
             outcome = "elope",
             predictors = c("age", "gender", "place3", "neuro"))
dca(tk)

# With validation
index <- sample(1:nrow(aps), 300)
train <- aps[index, ]
test  <- aps[-index, ]

dca(train,
    outcome = "elope",
    predictors = c("age", "gender", "place3", "neuro"),
    newdata = test)
# or
tk <- nmtask(train.data = train,
             test.data = test,
             outcome = "elope",
             predictors = c("age", "gender", "place3", "neuro"))
dca(tk)
}
